name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
    paths:
      - 'api/**'
      - 'backoffice/**'
      - 'domain/**'

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest

    env:
      GOOGLE_SERVICES_JSON: ${{ secrets.FCM }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5
        with:
          arguments: clean bootJar

      - name: Build And Push Docker Image for API
        run: |
          if echo "${{ github.event.head_commit.message }}" | grep -q 'feat\[api\]:'; then
            echo "Entered the API build block"
            mkdir -p ./api/src/main/resources
            touch ./api/src/main/resources/jwt.yml
            echo "${{secrets.JWT}}" > ./api/src/main/resources/jwt.yml

            touch ./api/src/main/resources/application.yml
            echo "${{secrets.APPLICATION}}" > ./api/src/main/resources/application.yml

            touch ./api/src/main/resources/slack.yml
            echo "${{secrets.SLACK}}" > ./api/src/main/resources/slack.yml

            touch ./api/src/main/resources/aws.yml
            echo "${{secrets.AWS}}" > ./api/src/main/resources/aws.yml

            mkdir -p ./domain/src/main/resources/firebase
            echo "$GOOGLE_SERVICES_JSON" > ./domain/src/main/resources/firebase/fcm.json

            ./gradlew :api:build :domain:build
            docker build -t ${{ secrets.DOCKER_USERNAME }}/balance-game-api-server:latest .

            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker push ${{ secrets.DOCKER_USERNAME }}/balance-game-api-server:latest
          fi

      - name: AWS Credential
        if: contains(github.event.head_commit.message, 'feat[api]:')
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_SSH_HOST }}
          username: ${{ secrets.AWS_SSH_USERNAME }}
          key: ${{ secrets.AWS_KEY }}
          port: ${{ secrets.AWS_PORT }}
          script: |
            sudo docker rm -f balance-game-api-server
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/balance-game-api-server:latest
            sudo docker run -d --name balance-game-api-server -e TZ=Asia/Seoul -p 80:80 ${{ secrets.DOCKER_USERNAME }}/balance-game-api-server
            sudo docker rmi $(docker images -f "dangling=true" -q)